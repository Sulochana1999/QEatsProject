plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.crio'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-devtools'

	// Bean Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Google Guava
	implementation 'com.google.guava:guava:33.1.0-jre'

	// ModelMapper
	implementation 'org.modelmapper:modelmapper:3.1.1'

	// Jakarta Inject API
	implementation 'jakarta.inject:jakarta.inject-api:2.0.1'

	// Logging with Log4j2
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'

	// Lombok
	implementation 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Testing: JUnit 5, Mockito, Spring Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test' // includes @MockitoBean
	testImplementation 'org.mockito:mockito-junit-jupiter:5.12.0'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.junit.jupiter:junit-jupiter-api'
	testImplementation 'org.junit.jupiter:junit-jupiter-params'

	// Embedded Redis for testing
	testImplementation 'it.ozimov:embedded-redis:0.7.3'
}

tasks.named('test') {
	useJUnitPlatform()
	testLogging {
		events "PASSED", "FAILED", "SKIPPED"
	}
}

tasks.register('customBuildJar', Jar) {
	archiveBaseName = 'my-application'
	archiveVersion = '1.0.0'
	from sourceSets.main.output
	manifest {
		attributes(
				'Main-Class': 'com.crio.qeats.QEatsApplication'
		)
	}
}
